name: Continuous Integration

on:
  push:
    branches: [ main, ollama ]
  pull_request:
    branches: [ main, ollama ]

env:
  JAVA_VERSION: '17'
  JAVA_DISTRIBUTION: 'temurin'

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: ${{ env.JAVA_DISTRIBUTION }}
    
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Run tests
      run: mvn clean test
    
    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: (success() || failure()) && github.event_name == 'push'
      with:
        name: Maven Tests
        path: target/surefire-reports/*.xml
        reporter: java-junit
        
    - name: Comment test results on PR
      if: (success() || failure()) && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // Read test results
          let testSummary = '## 🧪 Test Results\n\n';
          
          try {
            const testDir = 'target/surefire-reports';
            if (fs.existsSync(testDir)) {
              const files = fs.readdirSync(testDir).filter(f => f.endsWith('.xml'));
              if (files.length > 0) {
                testSummary += `✅ Found ${files.length} test report file(s)\n`;
                testSummary += '📊 Test results are available in the uploaded artifacts\n';
              } else {
                testSummary += '⚠️ No test report files found\n';
              }
            } else {
              testSummary += '❌ Test reports directory not found\n';
            }
          } catch (error) {
            testSummary += `❌ Error reading test results: ${error.message}\n`;
          }
          
          testSummary += '\n💾 Full test reports are uploaded as artifacts for detailed review.';
          
          // Find existing comment
          const comments = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });
          
          const botComment = comments.data.find(comment => 
            comment.user.type === 'Bot' && comment.body.includes('🧪 Test Results')
          );
          
          if (botComment) {
            // Update existing comment
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: botComment.id,
              body: testSummary
            });
          } else {
            // Create new comment
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: testSummary
            });
          }
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ github.sha }}
        path: target/surefire-reports/
        retention-days: 7

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: ${{ env.JAVA_DISTRIBUTION }}
    
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Build JAR
      run: mvn clean package -DskipTests
    
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: misoto-jar-${{ github.sha }}
        path: target/misoto-*.jar
        retention-days: 7

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: ${{ env.JAVA_DISTRIBUTION }}
    
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Run SpotBugs (if configured)
      run: |
        if grep -q "spotbugs" pom.xml; then
          mvn spotbugs:check
        else
          echo "SpotBugs not configured, skipping"
        fi
        
    - name: Run Checkstyle (if configured)  
      run: |
        if grep -q "checkstyle" pom.xml; then
          mvn checkstyle:check
        else
          echo "Checkstyle not configured, skipping"
        fi